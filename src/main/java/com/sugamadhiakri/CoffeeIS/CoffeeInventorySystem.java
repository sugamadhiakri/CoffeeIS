/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sugamadhiakri.CoffeeIS;

import java.awt.Desktop;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static javax.swing.JOptionPane.showMessageDialog;

/**
 *
 * @author sugam, samrat
 */
public class CoffeeInventorySystem extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public static ArrayList<Coffee> items;

    boolean imported;

    public CoffeeInventorySystem(ArrayList<Coffee> items) {
        CoffeeInventorySystem.items = items;
        this.imported = false;
        initComponents();
    }

    public void adder(int modelNumber, String appName, String category, String recommendedBy, int price, int discount, boolean sugar) {
        CoffeeInventorySystem.items.add(new Coffee(modelNumber, appName, category, recommendedBy, price, discount, sugar));
    }

    public static void refreshTable() {
        DefaultTableModel model = new DefaultTableModel(0, 0);
        CoffeeInventorySystem.itemTable.setModel(model);
        model.setColumnIdentifiers(new String[]{
            "coffee number", "coffe name", "category", "recommened by", "discount", "price", "added sugar"
        });
        CoffeeInventorySystem.itemTable.setEnabled(false);
        CoffeeInventorySystem.items.forEach((Coffee c) -> {
            int num = c.getModelNumber();
            String name = c.getAppName();
            String cat = c.getCategory();
            String rec = c.getRecommendedBy();
            int dis = c.getDiscount();
            int price = c.getPrice();
            boolean s = c.isAddedSugar();
            String sugar;
            if (s) {
                sugar = "yes";
            } else {
                sugar = "no";
            }
            Object[] data = {num, name, cat, rec, dis, price, sugar};
            model.addRow(data);
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        addItem = new javax.swing.JButton();
        searchByPrice = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        sort = new javax.swing.JButton();
        warn1 = new javax.swing.JLabel();
        exit = new javax.swing.JButton();
        searchPrice = new javax.swing.JTextField();
        searchTypeBox = new javax.swing.JComboBox<>();
        searchTypes = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        importMenu = new javax.swing.JMenuItem();
        exportMenu = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Coffie Inventory System");

        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "coffee number", "coffee name", "category", "recommened by", "discount", "price", "sugar"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemTable.setName(""); // NOI18N
        jScrollPane2.setViewportView(itemTable);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        addItem.setText("Add Item");
        addItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemActionPerformed(evt);
            }
        });

        searchByPrice.setText("Search By Price");
        searchByPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByPriceActionPerformed(evt);
            }
        });

        refresh.setText("REFRESH");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        sort.setText("SORT");
        sort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortActionPerformed(evt);
            }
        });

        warn1.setForeground(new java.awt.Color(255, 0, 0));

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        searchPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPriceActionPerformed(evt);
            }
        });
        searchPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchPriceKeyTyped(evt);
            }
        });

        searchTypeBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Latte", "Cappuccino", "Americano", "Espresso" }));
        searchTypeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTypeBoxActionPerformed(evt);
            }
        });

        searchTypes.setText("Search By Type");
        searchTypes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTypesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(warn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addItem, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                            .addComponent(searchPrice))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(refresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(searchByPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchTypeBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sort, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(searchTypes, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exit)
                        .addGap(15, 15, 15))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchByPrice)
                    .addComponent(searchPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchTypes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(warn1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addItem)
                    .addComponent(refresh)
                    .addComponent(sort)
                    .addComponent(exit))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 26)); // NOI18N
        jLabel1.setText("Coffee House Inventory ");

        fileMenu.setText("File");

        importMenu.setText("Import csv");
        importMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importMenuActionPerformed(evt);
            }
        });
        fileMenu.add(importMenu);

        exportMenu.setText("Export to csv");
        exportMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportMenuActionPerformed(evt);
            }
        });
        fileMenu.add(exportMenu);

        jMenuBar1.add(fileMenu);

        helpMenu.setText("Help");
        helpMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                helpMenuMouseClicked(evt);
            }
        });
        helpMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMenuActionPerformed(evt);
            }
        });
        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(169, 169, 169)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemActionPerformed
        // TODO add your handling code here:
        AddItem a = new AddItem(CoffeeInventorySystem.items);
        a.setVisible(true);
        CoffeeInventorySystem.items = a.items;
    }//GEN-LAST:event_addItemActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        refreshTable();
    }//GEN-LAST:event_refreshActionPerformed

    private void sortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortActionPerformed
        // TODO add your handling code here:
        MergeSort.sortMyArray();
        refreshTable();
        showMessageDialog(null, "Sorted accourding to the prices");
    }//GEN-LAST:event_sortActionPerformed

    private void importMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importMenuActionPerformed
        // TODO add your handling code here:

        if (this.imported == false) {
            forCsv.addFromCsv();
            this.imported = true;
            refreshTable();
        } else {
            showMessageDialog(null, "Data already imported");
        }


    }//GEN-LAST:event_importMenuActionPerformed

    private void searchByPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByPriceActionPerformed
        // TODO add your handling code here:
        MergeSort.sortMyArray();
        try {
            int p = Integer.parseInt(searchPrice.getText());
            int ret = BinarySearch.binarySearch(CoffeeInventorySystem.items, p);
            if (ret == -1) {
                showMessageDialog(null, "sorry there is no coffee with price:" + p);
            } else {
                Coffee coff = CoffeeInventorySystem.items.get(ret);
                showMessageDialog(null, "\nItem number: " + coff.getModelNumber() + "\nCoffee name: " + coff.getAppName() + "\ntype: " + coff.getCategory() + "\n recommende by: " + coff.getRecommendedBy() + "\nprice: " + coff.getPrice() + "\ndiscount: " + coff.getDiscount());
            }
        } catch (NumberFormatException e) {
            showMessageDialog(null, "Price is empty");
        }

    }//GEN-LAST:event_searchByPriceActionPerformed

    private void exportMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportMenuActionPerformed
        // TODO add your handling code here:
        forCsv.addIntoCsv();
        showMessageDialog(null, "Exported to items.csv");
    }//GEN-LAST:event_exportMenuActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void searchPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchPriceActionPerformed

    private void searchPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchPriceKeyTyped
        // TODO add your handling code here:
        if ((evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') || evt.getKeyChar() == '\b') {

            searchPrice.setEditable(true);
            warn1.setText("");
        } else {
            searchPrice.setEditable(false);
            warn1.setText("Enter only numeric digits");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_searchPriceKeyTyped

    private void searchTypeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTypeBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTypeBoxActionPerformed

    private void searchTypesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTypesActionPerformed
        // TODO add your handling code here:
        String type = searchTypeBox.getSelectedItem().toString();
        ArrayList<Coffee> get = SearchByType.searchByType(CoffeeInventorySystem.items, type);
        ArrayList<String> arr = new ArrayList<>();
        for (Coffee g : get) {
            arr.add(g.getAppName() + " ");
        }
        String ar = arr.toString();
        showMessageDialog(null, "There are " + get.size() + " items of type: " + type + ": " + ar);
    }//GEN-LAST:event_searchTypesActionPerformed

    private void helpMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuActionPerformed
        
    }//GEN-LAST:event_helpMenuActionPerformed

    private void helpMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_helpMenuMouseClicked
        // TODO add your handling code here:
        String url = System.getProperty("user.dir") + "\\help.html";
        System.out.println(url);
        try {
            File htmlFile = new File(url);
            Desktop.getDesktop().browse(htmlFile.toURI());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Help File Not Found");
        }
    }//GEN-LAST:event_helpMenuMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CoffeeInventorySystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CoffeeInventorySystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CoffeeInventorySystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CoffeeInventorySystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            ArrayList<Coffee> items1 = new ArrayList<>();
            CoffeeInventorySystem a = new CoffeeInventorySystem(items1);
            //a.adder(1, "himalayan coffee", "coffee beans", "matt D'Avella",5000,10);
            //a.adder(2, "ilam coffee", "coffee beans", "kp oli",1000,20);
            //a.adder(3, "african coffee", "grinded coffee ", "barak obama",10000,00);
            a.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addItem;
    private javax.swing.JButton exit;
    private javax.swing.JMenuItem exportMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem importMenu;
    public static javax.swing.JTable itemTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton refresh;
    private javax.swing.JButton searchByPrice;
    private javax.swing.JTextField searchPrice;
    private javax.swing.JComboBox<String> searchTypeBox;
    private javax.swing.JButton searchTypes;
    private javax.swing.JButton sort;
    private javax.swing.JLabel warn1;
    // End of variables declaration//GEN-END:variables
}
